# config SSL/TLS
server.port: 8443
server.ssl.key-store: src/main/resources/springboot.keystore
server.ssl.key-store-password: vannhucuma
server.ssl.keyAlias: tomcat
# config facebook social
facebook.app.id=180439422588509
facebook.app.secret=3e808bc29b78df7f46725782c206d9b0
facebook.redirect.uri=https://localhost:8443/login-facebook
facebook.link.get.token=https://graph.facebook.com/oauth/access_token?client_id=%s&client_secret=%s&redirect_uri=%s&code=%s

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/Airbnb_db
spring.datasource.username=root
spring.datasource.password=tglvb1995

# = Keep the connection alive if idle for a long time (needed in production)
# ==============================================================
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext


#mybatis entity scan packages
mybatis.type-aliases-package=vn.codegym.airbnb.model
#Mapper.xml location
mybatis.mapper-locations=classpath*:/xmlmapper/*Mapper.xml

spring.main.allow-bean-definition-overriding=true


# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder
# ==============================================================
spring.queries.users-query=select email, password, active from user where email=?
spring.queries.roles-query=select u.email, r.role from user u inner join user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.email=?

# ==============================================================
# = Initialize the database using data.sql script
# ==============================================================
spring.datasource.initialization-mode=always